@model Packing.Models.CargoInfoViewModel
@{
    ViewBag.Title = "出库信息记录";
}
@section Scripts {
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/moment-with-locales.js"></script>

    <link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />

    <script src="https://cdn.bootcss.com/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>

    <script src="~/Scripts/bootstrap-table.js"></script>
    <link href="~/Content/bootstrap-table.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap-table-zh-CN.js"></script>
    <script type="text/javascript">

        $(function() {
            //1.初始化Table
            var list = new TableInit();
            list.Init();

            $('#submit').click(function() {
                list.Init();
            });


            $('#TimeStart').datetimepicker({
                format: 'YYYY-MM-DD hh:mm',
                locale: moment.locale('zh-cn')

            });

            $('#TimeEnd').datetimepicker({
                format: 'YYYY-MM-DD hh:mm',
                locale: moment.locale('zh-cn')
            });
        });

        var TableInit = function() {
            var oTableInit = new Object();
            //初始化Table
            oTableInit.Init = function() {
                $('#list').bootstrapTable("destroy");
                $('#list').bootstrapTable({
                    url: '/Cargo/StorageShipping', //请求后台的URL（*）
                    method: 'Post', //请求方式（*）
                    toolbar: '#toolbar', //工具按钮用哪个容器
                    striped: true, //是否显示行间隔色
                    cache: true,
                    pagination: true, //是否显示分页（*）
                    sortable: true, //是否启用排序
                    sortOrder: "asc", //排序方式

                    sidePagination: "server", //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1, //初始化加载第一页，默认第一页
                    pageSize: 10, //每页的记录行数（*）
                    pageList: [10, 25, 50, 100], //可供选择的每页的行数（*）
                    //search: false,
                    contentType: "application/x-www-form-urlencoded",
                    strictSearch: true,
                    showColumns: true, //是否显示所有的列
                    showRefresh: true, //是否显示刷新按钮
                    minimumCountColumns: 2, //最少允许的列数
                    clickToSelect: true, //是否启用点击选中行
                    height: 670, //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                    uniqueId: "ID", //每一行的唯一标识，一般为主键列
                    showToggle: true, //是否显示详细视图和列表视图的切换按钮
                    cardView: false, //是否显示详细视图
                    detailView: false, //是否显示父子表
                    columns: [
                        {
                            checkbox: true,
                            visible: true
                        }, {
                            field: 'CargoLogId',
                            title: '产品记录编号'
                        }, {
                            field: 'CargoName',
                            title: '产品名字'
                        }, {
                            field: 'Unit',
                            title: '单位'
                        }, {
                            field: 'Specifications',
                            title: '规格/型号'
                        },
                        //{
                        //    field: 'Type',
                        //    title: '型号'
                        //},
                        {
                            field: 'ChangeCount',
                            title: '出库数量'
                        },
                        //{
                        //    field: 'Amount',
                        //    title: '单价'
                        //}, {
                        //    field: 'SumAmount',
                        //    title: '总金额'
                        //},
                        {
                            field: 'ProjectName',
                            title: '项目'
                        }, {
                            field: 'TakenName',
                            title: '领用人'
                        }, {
                            field: 'UserName',
                            title: '操作人员'
                        },  {
                            field: 'Time',
                            title: '添加时间',
                            formatter: function(value, row, index) { //赋予的参数
                                //如果记得时间戳是毫秒级的就需要*1000 不然就错了记得转换成整型
                                var d = new Date(row.Time.substr(6, 10) * 1000);
                                var str = formatDate(d);
                                return str;
                            } //自定义方法，添加操作按钮

                        },{
                            field: 'SupplyName',
                            title: '供应商名'
                        },{
                            field: 'Desc',
                            title: '备注'
                        }, @*{
                            field: 'operate',
                            title: '操作',
                            formatter: function(value, row, index) { //赋予的参数
                                var str = '';
                                if (@ViewBag.PowerInfoId === 1 || @ViewBag.PowerInfoId === 2) {
                                    str = '<a id="back" class="btn btn-warning" href="Back?cargoLogId=' +
                                        row.CargoLogId +
                                        '">还原</a>';
                                    str += '<a class="btn btn-primary" href="EditStorageShipping?cargoLogId=' +
                                        row.CargoLogId +
                                        '">修改</a>';
                                }
                                return str;
                            } //自定义方法，添加操作按钮
                        }*@
                    ],


                    rowStyle: function(row, index) {
                        var classesArr = ['success', 'info'];
                        var rowStyle;
                        if (index % 2 === 0) { //偶数行
                            rowStyle = classesArr[0];
                        } else { //奇数行
                            rowStyle = classesArr[1];
                        }
                        return { classes: rowStyle };
                    }, //隔行变色


                    queryParams: function(params) {
                        var temp = { //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                            limit: params.limit, //页面大小
                            offset: params.offset,
                            sort: params.sort,
                            sortOrder: params.order, //排位命令（desc，asc）
                            TimeStart: $("input[name='TimeStart']").val(),
                            TimeEnd: $("input[name='TimeEnd']").val(),
                            Id: $("#Id").val(),
                            CargoName: $("#CargoName").val()
                        };
                        return temp;
                    }

                });


            };

            return oTableInit;
        };

        function formatDate(now) {
            var year = now.getFullYear();
            var month = now.getMonth() + 1;
            var date = now.getDate();
            var hour = now.getHours();
            var minute = now.getMinutes();
            var second = now.getSeconds();
            return year + "-" + month + "-" + date + " " + hour + ":" + minute + ":" + second;
        }

    </script>
}

<h2>@ViewBag.Title</h2>

<span>@Html.ActionLink("入库信息记录", "StorageIncoming", "cargo", null, new { @class = "btn btn-default" })</span>
<span>@Html.ActionLink("出库信息记录", "StorageShipping", "cargo", null, new { @class = "btn btn-default" })</span>


<form id="form" class="form-horizontal" method="post">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.TimeStart, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                <div class="input-group date col-md-12" id="TimeStart">
                    @Html.EditorFor(model => model.TimeStart, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>

            @Html.LabelFor(model => model.TimeEnd, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                <div class="input-group date col-md-12" id="TimeEnd">
                    @Html.EditorFor(model => model.TimeEnd, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>

            @Html.LabelFor(model => model.CargoName, new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CargoName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="col-md-1">
                <input type="button" value="查询" class="btn btn-default" id="submit" />
                @*<button class="btn btn-default" id="assemble">汇总</button>*@
            </div>
        </div>
    </div>
</form>
<table id="list"></table>


