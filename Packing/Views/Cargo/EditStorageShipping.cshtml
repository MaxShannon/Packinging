@model Packing.Models.CargoInfoViewModel
@{
    ViewBag.Title = "修改出库";
}

<script type="text/javascript">

    $(function () {

        $('#submit').click(function () {
            $.ajax({
                url: '@Url.Action("EditStorageShipping")',
                type: "Post",
                data: $('#form').serialize(),
                success: function (data) {
                    if (data.success === 'success') {
                        window.location.href = '@Url.Action("StorageShipping")';
                        alert(data.message);
                    }
                    if (data.success === 'fail') {
                        alert(data.message);
                    }
                },
                error: function (data) {
                    alert(data);
                }
            });
        });

        //$("input[type=radio][checked]").each(function() {

        //    item = $(this).val();

        //    alert(item);

        //});


        $('input[type=radio][name=project]').change(function() {
            if (this.value === '1') {
                $("#project").show();
            }
            else  {
                $("#project").hide();
            }
        });


    });



</script>




<h2>@ViewBag.Title</h2>

<form id="form" class="form-horizontal" method="post">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.CargoLogId)
    <div class="form-horizontal">
        <h4>产品信息</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CargoName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CargoName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.CargoName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ChangeCount, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.ChangeCount, new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.ChangeCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

        </div>

        <div class="form-group">
            <label class="control-label col-md-2">用途</label>
            <label class="radio-inline">
                <input type="radio" name="project" id="project1" value="1" checked> 项目
            </label>
            <label class="radio-inline">
                <input type="radio" name="project" id="project2" value="2"> 其他
            </label>
        </div>

        <div class="form-group" id="project">
            @Html.LabelFor(model => model.ProjectName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProjectId, (IEnumerable<SelectListItem>)ViewBag.ProjectName, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TakenName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TakenName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Desc, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Desc, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="修改" class="btn btn-default" id="submit" />
            </div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("返回", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
